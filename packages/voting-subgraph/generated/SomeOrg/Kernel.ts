// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class NewAppProxy extends ethereum.Event {
  get params(): NewAppProxy__Params {
    return new NewAppProxy__Params(this);
  }
}

export class NewAppProxy__Params {
  _event: NewAppProxy;

  constructor(event: NewAppProxy) {
    this._event = event;
  }

  get proxy(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get isUpgradeable(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get appId(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RecoverToVault extends ethereum.Event {
  get params(): RecoverToVault__Params {
    return new RecoverToVault__Params(this);
  }
}

export class RecoverToVault__Params {
  _event: RecoverToVault;

  constructor(event: RecoverToVault) {
    this._event = event;
  }

  get vault(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SetApp extends ethereum.Event {
  get params(): SetApp__Params {
    return new SetApp__Params(this);
  }
}

export class SetApp__Params {
  _event: SetApp;

  constructor(event: SetApp) {
    this._event = event;
  }

  get namespace(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get appId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get app(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Kernel extends ethereum.SmartContract {
  static bind(address: Address): Kernel {
    return new Kernel("Kernel", address);
  }

  hasInitialized(): boolean {
    let result = super.call("hasInitialized", "hasInitialized():(bool)", []);

    return result[0].toBoolean();
  }

  try_hasInitialized(): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasInitialized", "hasInitialized():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  apps(param0: Bytes, param1: Bytes): Address {
    let result = super.call("apps", "apps(bytes32,bytes32):(address)", [
      ethereum.Value.fromFixedBytes(param0),
      ethereum.Value.fromFixedBytes(param1)
    ]);

    return result[0].toAddress();
  }

  try_apps(param0: Bytes, param1: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall("apps", "apps(bytes32,bytes32):(address)", [
      ethereum.Value.fromFixedBytes(param0),
      ethereum.Value.fromFixedBytes(param1)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  allowRecoverability(token: Address): boolean {
    let result = super.call(
      "allowRecoverability",
      "allowRecoverability(address):(bool)",
      [ethereum.Value.fromAddress(token)]
    );

    return result[0].toBoolean();
  }

  try_allowRecoverability(token: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "allowRecoverability",
      "allowRecoverability(address):(bool)",
      [ethereum.Value.fromAddress(token)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  recoveryVaultAppId(): Bytes {
    let result = super.call(
      "recoveryVaultAppId",
      "recoveryVaultAppId():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_recoveryVaultAppId(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "recoveryVaultAppId",
      "recoveryVaultAppId():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getInitializationBlock(): BigInt {
    let result = super.call(
      "getInitializationBlock",
      "getInitializationBlock():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getInitializationBlock(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getInitializationBlock",
      "getInitializationBlock():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  APP_MANAGER_ROLE(): Bytes {
    let result = super.call(
      "APP_MANAGER_ROLE",
      "APP_MANAGER_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_APP_MANAGER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "APP_MANAGER_ROLE",
      "APP_MANAGER_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  newAppProxyPinned(
    _kernel: Address,
    _appId: Bytes,
    _initializePayload: Bytes
  ): Address {
    let result = super.call(
      "newAppProxyPinned",
      "newAppProxyPinned(address,bytes32,bytes):(address)",
      [
        ethereum.Value.fromAddress(_kernel),
        ethereum.Value.fromFixedBytes(_appId),
        ethereum.Value.fromBytes(_initializePayload)
      ]
    );

    return result[0].toAddress();
  }

  try_newAppProxyPinned(
    _kernel: Address,
    _appId: Bytes,
    _initializePayload: Bytes
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "newAppProxyPinned",
      "newAppProxyPinned(address,bytes32,bytes):(address)",
      [
        ethereum.Value.fromAddress(_kernel),
        ethereum.Value.fromFixedBytes(_appId),
        ethereum.Value.fromBytes(_initializePayload)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isPetrified(): boolean {
    let result = super.call("isPetrified", "isPetrified():(bool)", []);

    return result[0].toBoolean();
  }

  try_isPetrified(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isPetrified", "isPetrified():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  newAppProxy(_kernel: Address, _appId: Bytes): Address {
    let result = super.call(
      "newAppProxy",
      "newAppProxy(address,bytes32):(address)",
      [
        ethereum.Value.fromAddress(_kernel),
        ethereum.Value.fromFixedBytes(_appId)
      ]
    );

    return result[0].toAddress();
  }

  try_newAppProxy(
    _kernel: Address,
    _appId: Bytes
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "newAppProxy",
      "newAppProxy(address,bytes32):(address)",
      [
        ethereum.Value.fromAddress(_kernel),
        ethereum.Value.fromFixedBytes(_appId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  newAppProxy1(
    _kernel: Address,
    _appId: Bytes,
    _initializePayload: Bytes
  ): Address {
    let result = super.call(
      "newAppProxy",
      "newAppProxy(address,bytes32,bytes):(address)",
      [
        ethereum.Value.fromAddress(_kernel),
        ethereum.Value.fromFixedBytes(_appId),
        ethereum.Value.fromBytes(_initializePayload)
      ]
    );

    return result[0].toAddress();
  }

  try_newAppProxy1(
    _kernel: Address,
    _appId: Bytes,
    _initializePayload: Bytes
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "newAppProxy",
      "newAppProxy(address,bytes32,bytes):(address)",
      [
        ethereum.Value.fromAddress(_kernel),
        ethereum.Value.fromFixedBytes(_appId),
        ethereum.Value.fromBytes(_initializePayload)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  newAppProxyPinned1(_kernel: Address, _appId: Bytes): Address {
    let result = super.call(
      "newAppProxyPinned",
      "newAppProxyPinned(address,bytes32):(address)",
      [
        ethereum.Value.fromAddress(_kernel),
        ethereum.Value.fromFixedBytes(_appId)
      ]
    );

    return result[0].toAddress();
  }

  try_newAppProxyPinned1(
    _kernel: Address,
    _appId: Bytes
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "newAppProxyPinned",
      "newAppProxyPinned(address,bytes32):(address)",
      [
        ethereum.Value.fromAddress(_kernel),
        ethereum.Value.fromFixedBytes(_appId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  newAppInstance(
    _appId: Bytes,
    _appBase: Address,
    _initializePayload: Bytes,
    _setDefault: boolean
  ): Address {
    let result = super.call(
      "newAppInstance",
      "newAppInstance(bytes32,address,bytes,bool):(address)",
      [
        ethereum.Value.fromFixedBytes(_appId),
        ethereum.Value.fromAddress(_appBase),
        ethereum.Value.fromBytes(_initializePayload),
        ethereum.Value.fromBoolean(_setDefault)
      ]
    );

    return result[0].toAddress();
  }

  try_newAppInstance(
    _appId: Bytes,
    _appBase: Address,
    _initializePayload: Bytes,
    _setDefault: boolean
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "newAppInstance",
      "newAppInstance(bytes32,address,bytes,bool):(address)",
      [
        ethereum.Value.fromFixedBytes(_appId),
        ethereum.Value.fromAddress(_appBase),
        ethereum.Value.fromBytes(_initializePayload),
        ethereum.Value.fromBoolean(_setDefault)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  newAppInstance1(_appId: Bytes, _appBase: Address): Address {
    let result = super.call(
      "newAppInstance",
      "newAppInstance(bytes32,address):(address)",
      [
        ethereum.Value.fromFixedBytes(_appId),
        ethereum.Value.fromAddress(_appBase)
      ]
    );

    return result[0].toAddress();
  }

  try_newAppInstance1(
    _appId: Bytes,
    _appBase: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "newAppInstance",
      "newAppInstance(bytes32,address):(address)",
      [
        ethereum.Value.fromFixedBytes(_appId),
        ethereum.Value.fromAddress(_appBase)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  newPinnedAppInstance(_appId: Bytes, _appBase: Address): Address {
    let result = super.call(
      "newPinnedAppInstance",
      "newPinnedAppInstance(bytes32,address):(address)",
      [
        ethereum.Value.fromFixedBytes(_appId),
        ethereum.Value.fromAddress(_appBase)
      ]
    );

    return result[0].toAddress();
  }

  try_newPinnedAppInstance(
    _appId: Bytes,
    _appBase: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "newPinnedAppInstance",
      "newPinnedAppInstance(bytes32,address):(address)",
      [
        ethereum.Value.fromFixedBytes(_appId),
        ethereum.Value.fromAddress(_appBase)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  newPinnedAppInstance1(
    _appId: Bytes,
    _appBase: Address,
    _initializePayload: Bytes,
    _setDefault: boolean
  ): Address {
    let result = super.call(
      "newPinnedAppInstance",
      "newPinnedAppInstance(bytes32,address,bytes,bool):(address)",
      [
        ethereum.Value.fromFixedBytes(_appId),
        ethereum.Value.fromAddress(_appBase),
        ethereum.Value.fromBytes(_initializePayload),
        ethereum.Value.fromBoolean(_setDefault)
      ]
    );

    return result[0].toAddress();
  }

  try_newPinnedAppInstance1(
    _appId: Bytes,
    _appBase: Address,
    _initializePayload: Bytes,
    _setDefault: boolean
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "newPinnedAppInstance",
      "newPinnedAppInstance(bytes32,address,bytes,bool):(address)",
      [
        ethereum.Value.fromFixedBytes(_appId),
        ethereum.Value.fromAddress(_appBase),
        ethereum.Value.fromBytes(_initializePayload),
        ethereum.Value.fromBoolean(_setDefault)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  CORE_NAMESPACE(): Bytes {
    let result = super.call("CORE_NAMESPACE", "CORE_NAMESPACE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_CORE_NAMESPACE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "CORE_NAMESPACE",
      "CORE_NAMESPACE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  APP_BASES_NAMESPACE(): Bytes {
    let result = super.call(
      "APP_BASES_NAMESPACE",
      "APP_BASES_NAMESPACE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_APP_BASES_NAMESPACE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "APP_BASES_NAMESPACE",
      "APP_BASES_NAMESPACE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  APP_ADDR_NAMESPACE(): Bytes {
    let result = super.call(
      "APP_ADDR_NAMESPACE",
      "APP_ADDR_NAMESPACE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_APP_ADDR_NAMESPACE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "APP_ADDR_NAMESPACE",
      "APP_ADDR_NAMESPACE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  KERNEL_APP_ID(): Bytes {
    let result = super.call("KERNEL_APP_ID", "KERNEL_APP_ID():(bytes32)", []);

    return result[0].toBytes();
  }

  try_KERNEL_APP_ID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "KERNEL_APP_ID",
      "KERNEL_APP_ID():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  DEFAULT_ACL_APP_ID(): Bytes {
    let result = super.call(
      "DEFAULT_ACL_APP_ID",
      "DEFAULT_ACL_APP_ID():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ACL_APP_ID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ACL_APP_ID",
      "DEFAULT_ACL_APP_ID():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getApp(_namespace: Bytes, _appId: Bytes): Address {
    let result = super.call("getApp", "getApp(bytes32,bytes32):(address)", [
      ethereum.Value.fromFixedBytes(_namespace),
      ethereum.Value.fromFixedBytes(_appId)
    ]);

    return result[0].toAddress();
  }

  try_getApp(_namespace: Bytes, _appId: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall("getApp", "getApp(bytes32,bytes32):(address)", [
      ethereum.Value.fromFixedBytes(_namespace),
      ethereum.Value.fromFixedBytes(_appId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRecoveryVault(): Address {
    let result = super.call(
      "getRecoveryVault",
      "getRecoveryVault():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getRecoveryVault(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getRecoveryVault",
      "getRecoveryVault():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  acl(): Address {
    let result = super.call("acl", "acl():(address)", []);

    return result[0].toAddress();
  }

  try_acl(): ethereum.CallResult<Address> {
    let result = super.tryCall("acl", "acl():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  hasPermission(
    _who: Address,
    _where: Address,
    _what: Bytes,
    _how: Bytes
  ): boolean {
    let result = super.call(
      "hasPermission",
      "hasPermission(address,address,bytes32,bytes):(bool)",
      [
        ethereum.Value.fromAddress(_who),
        ethereum.Value.fromAddress(_where),
        ethereum.Value.fromFixedBytes(_what),
        ethereum.Value.fromBytes(_how)
      ]
    );

    return result[0].toBoolean();
  }

  try_hasPermission(
    _who: Address,
    _where: Address,
    _what: Bytes,
    _how: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "hasPermission",
      "hasPermission(address,address,bytes32,bytes):(bool)",
      [
        ethereum.Value.fromAddress(_who),
        ethereum.Value.fromAddress(_where),
        ethereum.Value.fromFixedBytes(_what),
        ethereum.Value.fromBytes(_how)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class TransferToVaultCall extends ethereum.Call {
  get inputs(): TransferToVaultCall__Inputs {
    return new TransferToVaultCall__Inputs(this);
  }

  get outputs(): TransferToVaultCall__Outputs {
    return new TransferToVaultCall__Outputs(this);
  }
}

export class TransferToVaultCall__Inputs {
  _call: TransferToVaultCall;

  constructor(call: TransferToVaultCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferToVaultCall__Outputs {
  _call: TransferToVaultCall;

  constructor(call: TransferToVaultCall) {
    this._call = call;
  }
}

export class NewAppProxyPinnedCall extends ethereum.Call {
  get inputs(): NewAppProxyPinnedCall__Inputs {
    return new NewAppProxyPinnedCall__Inputs(this);
  }

  get outputs(): NewAppProxyPinnedCall__Outputs {
    return new NewAppProxyPinnedCall__Outputs(this);
  }
}

export class NewAppProxyPinnedCall__Inputs {
  _call: NewAppProxyPinnedCall;

  constructor(call: NewAppProxyPinnedCall) {
    this._call = call;
  }

  get _kernel(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _appId(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _initializePayload(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class NewAppProxyPinnedCall__Outputs {
  _call: NewAppProxyPinnedCall;

  constructor(call: NewAppProxyPinnedCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class NewAppProxyCall extends ethereum.Call {
  get inputs(): NewAppProxyCall__Inputs {
    return new NewAppProxyCall__Inputs(this);
  }

  get outputs(): NewAppProxyCall__Outputs {
    return new NewAppProxyCall__Outputs(this);
  }
}

export class NewAppProxyCall__Inputs {
  _call: NewAppProxyCall;

  constructor(call: NewAppProxyCall) {
    this._call = call;
  }

  get _kernel(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _appId(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class NewAppProxyCall__Outputs {
  _call: NewAppProxyCall;

  constructor(call: NewAppProxyCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class NewAppProxy1Call extends ethereum.Call {
  get inputs(): NewAppProxy1Call__Inputs {
    return new NewAppProxy1Call__Inputs(this);
  }

  get outputs(): NewAppProxy1Call__Outputs {
    return new NewAppProxy1Call__Outputs(this);
  }
}

export class NewAppProxy1Call__Inputs {
  _call: NewAppProxy1Call;

  constructor(call: NewAppProxy1Call) {
    this._call = call;
  }

  get _kernel(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _appId(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _initializePayload(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class NewAppProxy1Call__Outputs {
  _call: NewAppProxy1Call;

  constructor(call: NewAppProxy1Call) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class NewAppProxyPinned1Call extends ethereum.Call {
  get inputs(): NewAppProxyPinned1Call__Inputs {
    return new NewAppProxyPinned1Call__Inputs(this);
  }

  get outputs(): NewAppProxyPinned1Call__Outputs {
    return new NewAppProxyPinned1Call__Outputs(this);
  }
}

export class NewAppProxyPinned1Call__Inputs {
  _call: NewAppProxyPinned1Call;

  constructor(call: NewAppProxyPinned1Call) {
    this._call = call;
  }

  get _kernel(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _appId(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class NewAppProxyPinned1Call__Outputs {
  _call: NewAppProxyPinned1Call;

  constructor(call: NewAppProxyPinned1Call) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _shouldPetrify(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _baseAcl(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _permissionsCreator(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class NewAppInstanceCall extends ethereum.Call {
  get inputs(): NewAppInstanceCall__Inputs {
    return new NewAppInstanceCall__Inputs(this);
  }

  get outputs(): NewAppInstanceCall__Outputs {
    return new NewAppInstanceCall__Outputs(this);
  }
}

export class NewAppInstanceCall__Inputs {
  _call: NewAppInstanceCall;

  constructor(call: NewAppInstanceCall) {
    this._call = call;
  }

  get _appId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _appBase(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _initializePayload(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _setDefault(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }
}

export class NewAppInstanceCall__Outputs {
  _call: NewAppInstanceCall;

  constructor(call: NewAppInstanceCall) {
    this._call = call;
  }

  get appProxy(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class NewAppInstance1Call extends ethereum.Call {
  get inputs(): NewAppInstance1Call__Inputs {
    return new NewAppInstance1Call__Inputs(this);
  }

  get outputs(): NewAppInstance1Call__Outputs {
    return new NewAppInstance1Call__Outputs(this);
  }
}

export class NewAppInstance1Call__Inputs {
  _call: NewAppInstance1Call;

  constructor(call: NewAppInstance1Call) {
    this._call = call;
  }

  get _appId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _appBase(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class NewAppInstance1Call__Outputs {
  _call: NewAppInstance1Call;

  constructor(call: NewAppInstance1Call) {
    this._call = call;
  }

  get appProxy(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class NewPinnedAppInstanceCall extends ethereum.Call {
  get inputs(): NewPinnedAppInstanceCall__Inputs {
    return new NewPinnedAppInstanceCall__Inputs(this);
  }

  get outputs(): NewPinnedAppInstanceCall__Outputs {
    return new NewPinnedAppInstanceCall__Outputs(this);
  }
}

export class NewPinnedAppInstanceCall__Inputs {
  _call: NewPinnedAppInstanceCall;

  constructor(call: NewPinnedAppInstanceCall) {
    this._call = call;
  }

  get _appId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _appBase(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class NewPinnedAppInstanceCall__Outputs {
  _call: NewPinnedAppInstanceCall;

  constructor(call: NewPinnedAppInstanceCall) {
    this._call = call;
  }

  get appProxy(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class NewPinnedAppInstance1Call extends ethereum.Call {
  get inputs(): NewPinnedAppInstance1Call__Inputs {
    return new NewPinnedAppInstance1Call__Inputs(this);
  }

  get outputs(): NewPinnedAppInstance1Call__Outputs {
    return new NewPinnedAppInstance1Call__Outputs(this);
  }
}

export class NewPinnedAppInstance1Call__Inputs {
  _call: NewPinnedAppInstance1Call;

  constructor(call: NewPinnedAppInstance1Call) {
    this._call = call;
  }

  get _appId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _appBase(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _initializePayload(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _setDefault(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }
}

export class NewPinnedAppInstance1Call__Outputs {
  _call: NewPinnedAppInstance1Call;

  constructor(call: NewPinnedAppInstance1Call) {
    this._call = call;
  }

  get appProxy(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class SetAppCall extends ethereum.Call {
  get inputs(): SetAppCall__Inputs {
    return new SetAppCall__Inputs(this);
  }

  get outputs(): SetAppCall__Outputs {
    return new SetAppCall__Outputs(this);
  }
}

export class SetAppCall__Inputs {
  _call: SetAppCall;

  constructor(call: SetAppCall) {
    this._call = call;
  }

  get _namespace(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _appId(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _app(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class SetAppCall__Outputs {
  _call: SetAppCall;

  constructor(call: SetAppCall) {
    this._call = call;
  }
}

export class SetRecoveryVaultAppIdCall extends ethereum.Call {
  get inputs(): SetRecoveryVaultAppIdCall__Inputs {
    return new SetRecoveryVaultAppIdCall__Inputs(this);
  }

  get outputs(): SetRecoveryVaultAppIdCall__Outputs {
    return new SetRecoveryVaultAppIdCall__Outputs(this);
  }
}

export class SetRecoveryVaultAppIdCall__Inputs {
  _call: SetRecoveryVaultAppIdCall;

  constructor(call: SetRecoveryVaultAppIdCall) {
    this._call = call;
  }

  get _recoveryVaultAppId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class SetRecoveryVaultAppIdCall__Outputs {
  _call: SetRecoveryVaultAppIdCall;

  constructor(call: SetRecoveryVaultAppIdCall) {
    this._call = call;
  }
}
