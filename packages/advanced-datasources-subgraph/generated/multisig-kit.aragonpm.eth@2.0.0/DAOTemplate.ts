// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class DeployDao extends ethereum.Event {
  get params(): DeployDao__Params {
    return new DeployDao__Params(this);
  }
}

export class DeployDao__Params {
  _event: DeployDao;

  constructor(event: DeployDao) {
    this._event = event;
  }

  get dao(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SetupDao extends ethereum.Event {
  get params(): SetupDao__Params {
    return new SetupDao__Params(this);
  }
}

export class SetupDao__Params {
  _event: SetupDao;

  constructor(event: SetupDao) {
    this._event = event;
  }

  get dao(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class DeployToken extends ethereum.Event {
  get params(): DeployToken__Params {
    return new DeployToken__Params(this);
  }
}

export class DeployToken__Params {
  _event: DeployToken;

  constructor(event: DeployToken) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class InstalledApp extends ethereum.Event {
  get params(): InstalledApp__Params {
    return new InstalledApp__Params(this);
  }
}

export class InstalledApp__Params {
  _event: InstalledApp;

  constructor(event: InstalledApp) {
    this._event = event;
  }

  get appProxy(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get appId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class DAOTemplate extends ethereum.SmartContract {
  static bind(address: Address): DAOTemplate {
    return new DAOTemplate("DAOTemplate", address);
  }

  newToken(_name: string, _symbol: string): Address {
    let result = super.call("newToken", "newToken(string,string):(address)", [
      ethereum.Value.fromString(_name),
      ethereum.Value.fromString(_symbol)
    ]);

    return result[0].toAddress();
  }

  try_newToken(_name: string, _symbol: string): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "newToken",
      "newToken(string,string):(address)",
      [ethereum.Value.fromString(_name), ethereum.Value.fromString(_symbol)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class NewInstanceCall extends ethereum.Call {
  get inputs(): NewInstanceCall__Inputs {
    return new NewInstanceCall__Inputs(this);
  }

  get outputs(): NewInstanceCall__Outputs {
    return new NewInstanceCall__Outputs(this);
  }
}

export class NewInstanceCall__Inputs {
  _call: NewInstanceCall;

  constructor(call: NewInstanceCall) {
    this._call = call;
  }

  get _id(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _holders(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get _stakes(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get _votingSettings(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get _financePeriod(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _useAgentAsVault(): boolean {
    return this._call.inputValues[5].value.toBoolean();
  }
}

export class NewInstanceCall__Outputs {
  _call: NewInstanceCall;

  constructor(call: NewInstanceCall) {
    this._call = call;
  }
}

export class NewTokenCall extends ethereum.Call {
  get inputs(): NewTokenCall__Inputs {
    return new NewTokenCall__Inputs(this);
  }

  get outputs(): NewTokenCall__Outputs {
    return new NewTokenCall__Outputs(this);
  }
}

export class NewTokenCall__Inputs {
  _call: NewTokenCall;

  constructor(call: NewTokenCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _symbol(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class NewTokenCall__Outputs {
  _call: NewTokenCall;

  constructor(call: NewTokenCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class NewTokenAndInstanceCall extends ethereum.Call {
  get inputs(): NewTokenAndInstanceCall__Inputs {
    return new NewTokenAndInstanceCall__Inputs(this);
  }

  get outputs(): NewTokenAndInstanceCall__Outputs {
    return new NewTokenAndInstanceCall__Outputs(this);
  }
}

export class NewTokenAndInstanceCall__Inputs {
  _call: NewTokenAndInstanceCall;

  constructor(call: NewTokenAndInstanceCall) {
    this._call = call;
  }

  get _tokenName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _tokenSymbol(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _id(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _holders(): Array<Address> {
    return this._call.inputValues[3].value.toAddressArray();
  }

  get _stakes(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }

  get _votingSettings(): Array<BigInt> {
    return this._call.inputValues[5].value.toBigIntArray();
  }

  get _financePeriod(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get _useAgentAsVault(): boolean {
    return this._call.inputValues[7].value.toBoolean();
  }
}

export class NewTokenAndInstanceCall__Outputs {
  _call: NewTokenAndInstanceCall;

  constructor(call: NewTokenAndInstanceCall) {
    this._call = call;
  }
}

export class NewInstance1Call extends ethereum.Call {
  get inputs(): NewInstance1Call__Inputs {
    return new NewInstance1Call__Inputs(this);
  }

  get outputs(): NewInstance1Call__Outputs {
    return new NewInstance1Call__Outputs(this);
  }
}

export class NewInstance1Call__Inputs {
  _call: NewInstance1Call;

  constructor(call: NewInstance1Call) {
    this._call = call;
  }

  get _id(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _holders(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get _stakes(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get _votingSettings(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get _financePeriod(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _useAgentAsVault(): boolean {
    return this._call.inputValues[5].value.toBoolean();
  }

  get _payrollSettings(): Array<BigInt> {
    return this._call.inputValues[6].value.toBigIntArray();
  }
}

export class NewInstance1Call__Outputs {
  _call: NewInstance1Call;

  constructor(call: NewInstance1Call) {
    this._call = call;
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _daoFactory(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _ens(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _miniMeFactory(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _aragonID(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}
